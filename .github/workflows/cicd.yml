name: CICD

on:
  push:
    branches:
      - main
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: a-porter-de-main/apm-express
  TAG: ${{ github.ref == 'refs/heads/main' && 'latest' || github.ref == 'refs/heads/develop' && 'develop' || 'latest' }}
  ENV: ${{ github.ref == 'refs/heads/develop' && 'preproduction' || 'production' }}
  PORT_BACKEND: ${{ secrets.PORT }} # le mÃªme en prod et preprod
  JWT_SECRET: ${{  secrets.JWT_SECRET }}
  JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
  ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD}}
  DATABASE_URL: ${{ github.ref == 'refs/heads/develop' && secrets.PREPROD_DATABASE_URL || secrets.DATABASE_URL }}


jobs:
  buildDocker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GTHB_TOKEN }}

      - name: Build Docker image
        run: docker build --tag ghcr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }} --platform linux/amd64 .

      - name: Build Docker image
        run: |
          docker build \
            --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.TAG }} \
            --build-arg ENV=${{ env.ENV }} \
            --build-arg PORT_BACKEND=${{ env.PORT_BACKEND }} \
            --build-arg JWT_SECRET=${{ env.JWT_SECRET }} \
            --build-arg JWT_EXPIRES_IN=${{ env.JWT_EXPIRES_IN }} \
            --build-arg ADMIN_EMAIL=${{ env.ADMIN_EMAIL }} \
            --build-arg ADMIN_PASSWORD=${{ env.ADMIN_PASSWORD }} \
            --build-arg DATABASE_URL=${{ env.DATABASE_URL }} \
            --platform linux/amd64 \
            ./apm

      - name: Push Docker image to GHCR
        run: docker push ghcr.io/${{ env.IMAGE_NAME }}:${{ env.TAG }}
