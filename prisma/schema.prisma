// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions = [uuidOssp(map: "uuid-ossp")]
}



model User {
  id                    String             @id @default(uuid()) @db.Uuid
  firstName             String             @db.VarChar(50)
  lastName              String             @db.VarChar(50)
  description           String?            @db.VarChar(250) 
  email                 String             @unique @db.VarChar(250)
  phone                 String             @unique @db.VarChar(20)
  password              String             @db.VarChar(250)
  stripeUserId           String?           
  picturePath           String             @db.VarChar(150)
  createdAt             DateTime           @default(now())
  updatedAt             DateTime           @updatedAt
  roleId                String?            @db.Uuid

  role                  Role?              @relation(fields: [roleId], references: [id])
  addresses             Address[]
  preference            Preference?
  requests              Request[]
  skills                Skill[]
  feedbacks             FeedBack[]
  feedbackApplications  FeedBackApplication[]
  issues                Issue[]
  objects               ObjectModel[]

}

model Role {
  id     String  @id @default(uuid()) @db.Uuid 
  name   String   @unique
  users  User[]
}

model Address {
  id     String  @id @default(uuid()) @db.Uuid 
  userId String   @db.Uuid 
  user   User    @relation(fields: [userId], references: [id])
}

model Preference {
  id     String  @id @default(uuid()) @db.Uuid 
  userId String  @unique @db.Uuid 
  user   User    @relation(fields: [userId], references: [id])
}

model Request {
  id     String  @id @default(uuid()) @db.Uuid 
  userId String @db.Uuid 
  user   User    @relation(fields: [userId], references: [id])
}

model Skill {
  id     String  @id @default(uuid()) @db.Uuid 
  userId String @db.Uuid 
  user   User    @relation(fields: [userId], references: [id])
}

model FeedBack {
  id     String  @id @default(uuid()) @db.Uuid 
  userId String   @db.Uuid 
  user   User    @relation(fields: [userId], references: [id])
}

model FeedBackApplication {
  id     String  @id @default(uuid()) @db.Uuid 
  userId String @db.Uuid 
  user   User    @relation(fields: [userId], references: [id])
}

model Issue {
  id     String  @id @default(uuid()) @db.Uuid 
  userId String  @db.Uuid 
  user   User    @relation(fields: [userId], references: [id])
}

model ObjectModel {
  id     String  @id @default(uuid()) @db.Uuid 
  userId String   @db.Uuid
  user   User    @relation(fields: [userId], references: [id])
}
